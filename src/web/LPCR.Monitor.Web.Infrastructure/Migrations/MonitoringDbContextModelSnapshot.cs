// <auto-generated />
using System;
using LPCR.Monitor.Web.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LPCR.Monitor.Web.Infrastructure.Migrations
{
    [DbContext(typeof(MonitoringDbContext))]
    partial class MonitoringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("BIT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("ProcessorName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)");

                    b.Property<string>("Schedule")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("ScheduleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("ScheduleTypeId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobRunEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool>("CanRetry")
                        .HasColumnType("BIT");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Paylaod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Started")
                        .HasColumnType("DATETIME");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("JobRuns");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobRunLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("JobRunId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobRunId");

                    b.HasIndex("LogTypeId");

                    b.ToTable("JobRunLogs");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobScheduleTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("JobScheduleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Scheduled"
                        },
                        new
                        {
                            Id = 2,
                            Name = "OnDemand"
                        });
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobStatusTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("JobStatusTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Unknown"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Queued"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Running"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Completed"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Errored"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Canceled"
                        });
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.LogTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id");

                    b.ToTable("LogTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Information"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Warning"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Error"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Critical"
                        });
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.SystemLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobEntity", b =>
                {
                    b.HasOne("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobScheduleTypeEntity", "ScheduleType")
                        .WithMany()
                        .HasForeignKey("ScheduleTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ScheduleType");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobRunEntity", b =>
                {
                    b.HasOne("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobEntity", "Job")
                        .WithMany("Runs")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobStatusTypeEntity", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobRunLogEntity", b =>
                {
                    b.HasOne("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobRunEntity", "JobRun")
                        .WithMany("Logs")
                        .HasForeignKey("JobRunId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.LogTypeEntity", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("JobRun");

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.SystemLogEntity", b =>
                {
                    b.HasOne("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.LogTypeEntity", "LogType")
                        .WithMany()
                        .HasForeignKey("LogTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobEntity", b =>
                {
                    b.Navigation("Runs");
                });

            modelBuilder.Entity("LPCR.Monitor.Web.Infrastructure.Persistance.Entities.JobRunEntity", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
